{"version":3,"file":"edit-mm7AVeyC.js","sources":["../../src/pages/supplier/edit.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { ElForm, ElMessage } from 'element-plus'\nimport { Warning } from '@element-plus/icons-vue'\nimport {\n  addSupplier,\n  editSupplier,\n  getSupplierDetail,\n  getTelegramAdmins\n} from '@/api/supplier.ts'\n\nconst visible = ref(false)\nconst formRef = ref<InstanceType<typeof ElForm>>()\nconst loading = ref(false)\nconst submitting = ref(false) // 防重复提交状态\n\n// 表单数据\nconst form = ref({\n  id: 0,\n  supplier_name: '',\n  interface_code: '',\n  status: 1,\n  prepayment_check: 0,\n  remark: '',\n  telegram_chat_id: '',\n  telegram_chat_ids: [] as number[], // 多选管理员\n  callback_whitelist_ips: [] as string[], // 回调IP白名单\n})\n\n// IP地址格式检查函数\nconst checkIPFormat = (ip: string): boolean => {\n  const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n  return ipRegex.test(ip)\n}\n\n\n// 表单验证规则\nconst rules = ref({\n  supplier_name: [{ required: true, message: '请输入供应商名称', trigger: 'blur' }],\n  interface_code: [{ required: true, message: '请输入接口代码', trigger: 'blur' }],\n  telegram_chat_id: [], // 选填，不进行实时验证\n  telegram_chat_ids: [{ required: true, message: '请选择管理员', trigger: 'change' }], // 必填\n  callback_whitelist_ips: [], // 选填，不进行实时验证\n})\n\n// 远程搜索管理员\nconst adminOptions = ref<{id:number,name:string}[]>([])\nconst loadingAdmins = ref(false)\nconst searchAdmins = async (query: string) => {\n  loadingAdmins.value = true\n  try {\n    const res = await getTelegramAdmins('/api/v1/admin/supplier/telegram-admins')\n    console.log('管理员API响应:', res.data)\n    \n    // 根据实际数据结构判断\n    if (res.data && Array.isArray(res.data)) {\n      // 如果res.data直接是管理员数组\n      const adminData = res.data\n      console.log('管理员数据:', adminData)\n      // 如果有搜索关键字则过滤\n      adminOptions.value = query\n          ? adminData.filter((item: any) => item.name.includes(query))\n          : adminData\n      console.log('过滤后的管理员选项:', adminOptions.value)\n    } else if (res.data && res.data.data && Array.isArray(res.data.data)) {\n      // 如果res.data包含data字段\n      const adminData = res.data.data\n      console.log('管理员数据:', adminData)\n      adminOptions.value = query\n          ? adminData.filter((item: any) => item.name.includes(query))\n          : adminData\n      console.log('过滤后的管理员选项:', adminOptions.value)\n    }\n  } finally {\n    loadingAdmins.value = false\n  }\n}\n\n\n// 处理IP输入，将文本转换为数组（使用|分隔符）\nconst handleIPInput = (value: string) => {\n  if (!value) {\n    form.value.callback_whitelist_ips = []\n    checkDuplicateIPs() // 只检查重复，不验证格式\n    return\n  }\n  \n  // 按|分隔符分割，过滤空行和空白字符\n  const ips = value.split('|')\n    .map(ip => ip.trim())\n    .filter(ip => ip.length > 0)\n  \n  // 直接保存所有输入的IP，不进行格式验证\n  form.value.callback_whitelist_ips = ips\n  \n  // 检查重复IP\n  checkDuplicateIPs()\n  \n  // 不显示格式错误警告，只在保存时验证\n}\n\n// 企业级IP去重功能\nconst deduplicateIPs = (ips: string[]): { uniqueIPs: string[], removedIPs: string[] } => {\n  const uniqueIPs: string[] = []\n  const removedIPs: string[] = []\n  const seen = new Set<string>()\n  \n  ips.forEach(ip => {\n    if (seen.has(ip)) {\n      removedIPs.push(ip)\n    } else {\n      seen.add(ip)\n      uniqueIPs.push(ip)\n    }\n  })\n  \n  return { uniqueIPs, removedIPs }\n}\n\n// IP白名单文本的响应式数据\nconst ipWhitelistText = ref('')\nconst duplicateIPs = ref<string[]>([]) // 存储重复的IP地址\nconst ipValidationMessages = ref<string[]>([]) // 存储验证消息\n\n// 检查重复IP（不检查格式）\nconst checkDuplicateIPs = () => {\n  const ips = ipWhitelistText.value.split('|')\n    .map(ip => ip.trim())\n    .filter(ip => ip.length > 0)\n  \n  const ipCount = new Map<string, number>()\n  const duplicates: string[] = []\n  \n  ips.forEach(ip => {\n    // 不检查格式，只检查重复\n    const count = ipCount.get(ip) || 0\n    ipCount.set(ip, count + 1)\n    if (count > 0) {\n      duplicates.push(ip)\n    }\n  })\n  \n  duplicateIPs.value = [...new Set(duplicates)] // 去重重复列表\n  \n  // 更新验证消息\n  const messages: string[] = []\n  if (duplicateIPs.value.length > 0) {\n    messages.push(`发现重复IP地址：${duplicateIPs.value.join(', ')}`)\n  }\n  ipValidationMessages.value = messages\n}\n\n// 监听IP白名单数组变化，更新文本\nwatch(() => form.value.callback_whitelist_ips, (newIPs) => {\n  const newText = newIPs.join('|')\n  ipWhitelistText.value = newText\n}, { immediate: true })\n\n// 监听文本变化，处理IP输入\nwatch(ipWhitelistText, (newText) => {\n  handleIPInput(newText)\n})\n\n\n\n\n// 打开弹窗\nconst open = async (data: any = {}) => {\n  console.log('打开弹窗，传入数据:', data)\n  \n  // 重置表单\n  resetForm()\n  loading.value = true\n  \n  try {\n    if (data.id && data.id > 0) {\n      // 编辑模式：从详情获取数据\n      const res = await getSupplierDetail('/api/v1/admin/supplier/detail', data.id)\n      console.log('供应商详情响应:', res.data)\n      \n        // 根据实际数据结构判断\n        if (res.data && res.data.id) {\n          // 如果res.data直接是供应商数据\n          const detailData = res.data\n          \n          // 处理callback_whitelist_ips字段\n          let callbackIPs = []\n          if (detailData.callback_whitelist_ips) {\n            if (Array.isArray(detailData.callback_whitelist_ips)) {\n              callbackIPs = detailData.callback_whitelist_ips\n            } else if (typeof detailData.callback_whitelist_ips === 'string') {\n              // 如果是字符串，按|分割\n              callbackIPs = detailData.callback_whitelist_ips.split('|').filter((ip: string) => ip.trim())\n            }\n          }\n          \n          Object.assign(form.value, {\n            id: detailData.id || 0,\n            supplier_name: detailData.supplier_name || '',\n            interface_code: detailData.interface_code || '',\n            status: detailData.status ?? 1,\n            prepayment_check: detailData.prepayment_check ?? 0,\n            remark: detailData.remark || '',\n            telegram_chat_id: detailData.telegram_chat_id || '',\n            telegram_chat_ids: detailData.telegram_chat_ids || [],\n            callback_whitelist_ips: callbackIPs\n          })\n        \n        // 预加载管理员数据\n        await searchAdmins('')\n        \n        // 确保已选中的管理员在选项中\n        if (form.value.telegram_chat_ids.length > 0) {\n          console.log('已选中的管理员ID:', form.value.telegram_chat_ids)\n          console.log('当前管理员选项:', adminOptions.value)\n          \n          // 如果已选中的管理员不在当前选项中，需要重新获取\n          const selectedIds = form.value.telegram_chat_ids\n          const currentIds = adminOptions.value.map(admin => admin.id)\n          const missingIds = selectedIds.filter(id => !currentIds.includes(id))\n          \n          console.log('缺失的管理员ID:', missingIds)\n          \n          if (missingIds.length > 0) {\n            // 重新获取所有管理员数据\n            await searchAdmins('')\n          }\n        }\n      } else {\n        console.log('供应商详情获取失败，响应数据:', res.data)\n        ElMessage.error('获取供应商详情失败：数据格式不正确')\n        return\n      }\n    } else {\n      // 新增模式：使用传入的数据\n      Object.assign(form.value, {\n        id: data.id || 0,\n        supplier_name: data.supplier_name || '',\n        interface_code: data.interface_code || '',\n        status: data.status ?? 1,\n        prepayment_check: data.prepayment_check ?? 0,\n        remark: data.remark || '',\n        telegram_chat_id: data.telegram_chat_id || '',\n        telegram_chat_ids: data.telegram_chat_ids || [],\n        callback_whitelist_ips: data.callback_whitelist_ips || []\n      })\n    }\n    \n    visible.value = true\n  } catch (error: any) {\n    console.error('获取供应商详情异常:', error)\n    ElMessage.error('获取供应商详情失败: ' + (error?.message || error))\n  } finally {\n    loading.value = false\n  }\n}\n\n// 提交表单\nconst handleSubmit = async () => {\n  // 防止重复提交\n  if (submitting.value) {\n    return\n  }\n  \n  try {\n    submitting.value = true\n    \n    // 验证表单，如果验证失败会抛出异常\n    await formRef.value?.validate()\n    \n    // 验证IP格式（只在提交时验证）\n    const invalidIPs: string[] = []\n    form.value.callback_whitelist_ips.forEach(ip => {\n      if (!checkIPFormat(ip)) {\n        invalidIPs.push(ip)\n      }\n    })\n    \n    if (invalidIPs.length > 0) {\n      ElMessage.error(`以下IP地址格式无效：${invalidIPs.join(', ')}`)\n      return\n    }\n    \n    // 企业级IP去重处理\n    const { uniqueIPs, removedIPs } = deduplicateIPs(form.value.callback_whitelist_ips)\n    \n    // 如果有重复IP被移除，显示提示\n    if (removedIPs.length > 0) {\n      ElMessage.warning(`已自动移除重复IP地址：${removedIPs.join(', ')}`)\n    }\n    \n    const payload = { \n      ...form.value, \n      callback_whitelist_ips: uniqueIPs // 使用去重后的IP列表\n    }\n\n    let res\n    if (form.value.id === 0) {\n      res = await addSupplier('/api/v1/admin/supplier/add', payload)\n    } else {\n      res = await editSupplier('/api/v1/admin/supplier/edit', payload)\n    }\n    \n    if (res && (res as any).status === true) {\n      ElMessage.success((res as any).message || '操作成功')\n      emit('refresh')\n      visible.value = false\n    } else {\n      ElMessage.error((res as any)?.message || '操作失败')\n    }\n  } catch (error) {\n    console.error('提交失败:', error)\n    // 不显示ElMessage.error，让Element Plus的验证提示显示即可\n  } finally {\n    submitting.value = false\n  }\n}\n\n// 重置表单\nconst resetForm = () => {\n  form.value = {\n    id: 0,\n    supplier_name: '',\n    interface_code: '',\n    status: 1,\n    prepayment_check: 0,\n    remark: '',\n    telegram_chat_id:'',\n    telegram_chat_ids: [],\n    callback_whitelist_ips: []\n  }\n  // 重置IP白名单文本\n  ipWhitelistText.value = ''\n}\n\n// 关闭弹窗时重置表单\nwatch(visible, (newVal, oldVal) => {\n  // 只有当弹窗从打开状态变为关闭状态时才重置表单\n  if (oldVal === true && newVal === false) {\n    console.log('弹窗关闭，重置表单')\n    resetForm()\n  }\n})\n\nconst emit = defineEmits<{\n  (event: 'refresh'): void\n}>()\ndefineExpose({ open })\n</script>\n\n\n<template>\n  <el-drawer v-model=\"visible\" title=\"供应商\" size=\"50%\">\n    <div v-loading=\"loading\" element-loading-text=\"加载中...\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"150px\">\n      <!-- 基础信息 -->\n      <el-divider content-position=\"left\">基础信息</el-divider>\n      <el-form-item label=\"供应商名称\" prop=\"supplier_name\">\n        <el-input \n          v-model=\"form.supplier_name\" \n          placeholder=\"请输入供应商名称\"\n        />\n      </el-form-item>\n\n      <el-form-item label=\"接口代码\" prop=\"interface_code\">\n        <el-input \n          v-model=\"form.interface_code\" \n          placeholder=\"请输入接口代码\"\n        />\n      </el-form-item>\n\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"状态\" prop=\"status\">\n            <el-switch v-model=\"form.status\" :active-value=\"1\" :inactive-value=\"0\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"预付检验\" prop=\"prepayment_check\">\n            <el-switch v-model=\"form.prepayment_check\" :active-value=\"1\" :inactive-value=\"0\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-form-item label=\"绑定群组\" prop=\"telegram_chat_id\">\n        <el-input v-model=\"form.telegram_chat_id\" placeholder=\"请输入群组ID（选填）\" />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            群组ID为选填项，用于接收供应商相关通知\n          </el-text>\n        </div>\n      </el-form-item>\n\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input v-model=\"form.remark\" type=\"textarea\" />\n      </el-form-item>\n\n      <!-- 回调IP白名单 -->\n      <el-divider content-position=\"left\">回调IP白名单</el-divider>\n      <el-form-item label=\"IP白名单\" prop=\"callback_whitelist_ips\">\n        <el-input\n          v-model=\"ipWhitelistText\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder=\"请输入IP地址，多个IP用|分隔，例如：192.168.1.1|192.168.1.2|10.0.0.1\"\n          :style=\"{\n            border: duplicateIPs.length > 0 ? '1px solid #f56c6c' : '1px solid #dcdfe6'\n          }\"\n        />\n        \n        <!-- 重复IP提示 -->\n        <div v-if=\"duplicateIPs.length > 0\" class=\"duplicate-ip-warning\">\n          <el-text type=\"warning\" size=\"small\">\n            <el-icon><Warning /></el-icon>\n            发现重复IP地址：{{ duplicateIPs.join(', ') }}\n          </el-text>\n        </div>\n        \n        <!-- 验证消息 -->\n        <div v-if=\"ipValidationMessages.length > 0\" class=\"ip-validation-messages\">\n          <el-text \n            v-for=\"(message, index) in ipValidationMessages\" \n            :key=\"index\"\n            type=\"warning\" \n            size=\"small\"\n            class=\"validation-message\"\n          >\n            {{ message }}\n          </el-text>\n        </div>\n        \n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            多个IP地址用|分隔，支持IPv4格式，选填。例如：192.168.1.1|192.168.1.2|10.0.0.1\n          </el-text>\n        </div>\n      </el-form-item>\n\n      <!-- 绑定管理员 -->\n      <el-divider content-position=\"left\">绑定管理员</el-divider>\n      <el-form-item label=\"管理员\" prop=\"telegram_chat_ids\">\n        <el-select\n            v-model=\"form.telegram_chat_ids\"\n            multiple\n            filterable\n            remote\n            reserve-keyword\n            placeholder=\"搜索并选择管理员\"\n            :remote-method=\"searchAdmins\"\n            :loading=\"loadingAdmins\"\n            clearable\n            collapse-tags\n            collapse-tags-tooltip\n        >\n          <el-option\n              v-for=\"admin in adminOptions\"\n              :key=\"admin.id\"\n              :label=\"admin.name\"\n              :value=\"admin.id\"\n          />\n        </el-select>\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            已选择 {{ form.telegram_chat_ids.length }} 个管理员\n          </el-text>\n        </div>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button \n          type=\"primary\" \n          @click=\"handleSubmit\"\n          :loading=\"submitting\"\n          :disabled=\"submitting\"\n        >\n          {{ submitting ? '提交中...' : '提交' }}\n        </el-button>\n      </el-form-item>\n      </el-form>\n    </div>\n  </el-drawer>\n</template>\n\n<style scoped>\n/* 重复IP警告样式 */\n.duplicate-ip-warning {\n  margin-top: 8px;\n  padding: 8px 12px;\n  background-color: #fdf6ec;\n  border: 1px solid #e6a23c;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.duplicate-ip-warning .el-icon {\n  margin-right: 4px;\n}\n\n/* IP验证消息样式 */\n.ip-validation-messages {\n  margin-top: 8px;\n}\n\n.validation-message {\n  display: block;\n  margin-bottom: 4px;\n  padding: 4px 8px;\n  background-color: #fdf6ec;\n  border-radius: 4px;\n}\n\n/* 表单提示样式 */\n.form-tip {\n  margin-top: 8px;\n  font-size: 12px;\n  color: #909399;\n}\n.form-tip {\n  margin-top: 4px;\n}\n\n:deep(.el-select) {\n  width: 100%;\n}\n\n:deep(.el-form-item__label) {\n  font-weight: 500;\n}\n\n:deep(.el-divider__text) {\n  font-weight: 600;\n  color: #409eff;\n}\n</style>\n"],"names":["visible","ref","formRef","loading","submitting","form","checkIPFormat","ip","rules","adminOptions","loadingAdmins","searchAdmins","query","res","getTelegramAdmins","adminData","item","handleIPInput","value","checkDuplicateIPs","ips","deduplicateIPs","uniqueIPs","removedIPs","seen","ipWhitelistText","duplicateIPs","ipValidationMessages","ipCount","duplicates","count","messages","watch","newIPs","newText","open","data","resetForm","getSupplierDetail","detailData","callbackIPs","selectedIds","currentIds","admin","missingIds","id","ElMessage","error","handleSubmit","_a","invalidIPs","payload","addSupplier","editSupplier","emit","newVal","oldVal","__emit","__expose","_createBlock","_component_el_drawer","$event","_withDirectives","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_unref","ElForm","_component_el_divider","_cache","_component_el_form_item","_component_el_input","_component_el_row","_component_el_col","_component_el_switch","_createElementVNode","_hoisted_2","_component_el_text","_normalizeStyle","_hoisted_3","_component_el_icon","Warning","_toDisplayString","_hoisted_4","_Fragment","_renderList","message","index","_hoisted_5","_component_el_select","_component_el_option","_hoisted_6","_createTextVNode","_component_el_button"],"mappings":"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"}