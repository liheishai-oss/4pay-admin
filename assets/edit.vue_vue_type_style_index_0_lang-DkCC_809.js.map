{"version":3,"file":"edit.vue_vue_type_style_index_0_lang-DkCC_809.js","sources":["../../src/pages/admin/group/edit.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {ref} from 'vue'\nimport type Node from 'element-plus/es/components/tree/src/model/node'\nimport type { TreeNodeData } from 'element-plus/es/components/tree/src/tree.type'\n\nconst customNodeClass = ({ isPenultimate }: TreeNodeData, _node: Node) =>\n    isPenultimate ? 'is-penultimate' : ''\nimport {addAdminGroup, editAdminGroup, getUserGroup, getUserGroupDetail, getUserRule} from \"@/api/api.ts\";\nimport {ElMessage} from \"element-plus\";\nconst visible = ref(false);\nconst treeRef = ref<any>();\n\nconst formRef = ref()\n\nconst rules = {\n  name: [{ required: true, message: '请输入分组名称', trigger: 'blur' }],\n  parent_id: [{ required: false }],\n}\n\n\n// 表单数据\nconst form = ref({\n  id:0,\n  parent_id:'',\n  name:'',\n  weight:0,\n  remark:'',\n  is_enabled:0,\n})\nconst treeData = ref([])\nconst GetUserRule = async () => {\n  try {\n    const { data } = await getUserRule(form.value.id)\n    treeData.value = data || []\n  } catch (error) {\n    console.error('获取用户权限失败:', error)\n  }\n}\n\nconst userGroupData = ref([])\nconst GetUserGroup = async () => {\n  try {\n    const { data } = await getUserGroup(form.value.id)\n    userGroupData.value = data || []\n  } catch (error) {\n    console.error('获取用户权限失败:', error)\n  }\n}\nconst GetUserGroupDetail = async (id:number) => {\n  try {\n    const {data} =  await getUserGroupDetail(id)\n    return data\n  } catch (error) {\n    console.error('获取用户权限失败:', error)\n  }\n}\n\n\n// 配置树形结构的字段\nconst treeProps = {\n  label: 'name',\n  children: 'children'\n}\n// 定义 emit 事件\nconst emit = defineEmits<{\n  (event: 'refresh'): void;\n}>();\n// 打开弹窗并填充数据\nconst open = async (data = {}) => {\n  console.log(\"接收参数\",data)\n\n  const merged = {\n    ...data,\n  };\n\n  if ((merged as any).parent_id === 0) {\n    (merged as any).parent_id = '';\n  }\n\n  Object.assign(form.value, merged);\n  await GetUserGroup()\n  await GetUserRule()\n  if((merged as any).id>0){\n    const detail = await GetUserGroupDetail((merged as any).id)\n    console.log(\"详情\",detail)\n    Object.assign(form.value, detail);\n  }else{\n\t  form.value.id = 0\n  }\n  console.log(form.value);\n  visible.value = true;\n};\n// 提交表单\nconst handleSubmit = async () => {\n\n  // 获取选中的权限节点 ID\n  const checkedKeys = treeRef.value?.getCheckedKeys() || []\n  // console.log('checkedKeys',checkedKeys)\n  //   const nodeMap = new Map<number, TreeNodeData>()\n  //  const flattenTree = (nodes: TreeNodeData[]) => {\n  //     for (const node of nodes) {\n  //       nodeMap.set(node.id, node)\n  //       if (node.children) flattenTree(node.children)\n  //     }\n  //   }\n  //   flattenTree(treeData.value)\n  // console.log(\"treeData\",treeData.value)\n  // console.log(\"nodeMap\", nodeMap)\n  //   const allKeys = new Set<number>(checkedKeys)\n  //\n  //   // 向上查找父级节点\n  //   for (const key of checkedKeys) {\n\t// \tconsole.log(\"key\",key)\n  //     let current = nodeMap.get(key)\n  //     while (current && current.parent_id && !allKeys.has(current.parent_id)) {\n  //       allKeys.add(current.parent_id)\n  //       current = nodeMap.get(current.parent_id)\n  //     }\n  //   }\n\t// console.log(\"allKeys\",allKeys)\n\n  // 合并到提交数据中\n  const payload = {\n    ...form.value,\n    rule_ids: checkedKeys, // 假设你后端用的是 rule_ids 接收\n  }\n\n  let data;\n  if(payload.id == 0) {\n    data = await addAdminGroup(payload);\n  }else{\n    data = await editAdminGroup(payload);\n  }\n\n  if (data.status) {\n    ElMessage.success(data.message)\n    emit('refresh');\n    visible.value = false;\n  }\n  return false;\n\n}\n\n\n\n// 暴露 `open` 方法，供外部调用\ndefineExpose({ open });\n</script>\n\n<template>\n  <el-dialog v-model=\"visible\" title=\"用户分组\" width=\"40%\">\n    <el-form :model=\"form\" label-width=\"100px\" :rules=\"rules\" ref=\"formRef\" >\n      <el-form-item label=\"上级分组\" prop=\"parent_id\">\n        <el-tree-select\n            v-model=\"form.parent_id\"\n            :data=\"userGroupData\"\n            :props=\"treeProps\"\n            node-key=\"id\"\n\n            check-strictly\n            placeholder=\"请选择上级分组\"\n            clearable\n            :filterable=\"true\"\n            :allow-create=\"true\"\n            default-value=\"0\"\n        />\n      </el-form-item>\n      <!-- 分组名称 -->\n      <el-form-item label=\"分组名称\" prop=\"title\">\n        <el-input v-model=\"form.name\" placeholder=\"请输入分组名称\" />\n      </el-form-item>\n      <!-- 状态 -->\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-switch v-model=\"form.is_enabled\" :active-value=\"1\" :inactive-value=\"0\" />\n      </el-form-item>\n\n\n      <!-- 权重 -->\n      <el-form-item label=\"权重\" prop=\"weight\">\n        <el-input-number v-model=\"form.weight\" :min=\"0\" />\n      </el-form-item>\n\n\n      <!-- 权限分配 -->\n      <el-form-item label=\"分配权限\" prop=\"parent_id\">\n\n        <div class=\"custom-tree-node-container\">\n          <el-tree\n              style=\"max-width: 600px\"\n              :data=\"treeData\"\n              show-checkbox\n              ref=\"treeRef\"\n              node-key=\"id\"\n              :default-expanded-keys=\"(form as any).rule_ids\"\n              :default-checked-keys=\"(form as any).rule_ids\"\n              :expand-on-click-node=\"false\"\n              :props=\"{ class: customNodeClass,label:'title' }\"\n          />\n        </div>\n      </el-form-item>\n\n\n\n\n\n      <!-- 备注 -->\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input v-model=\"form.remark\" type=\"textarea\" />\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n<style>\n.is-penultimate > .el-tree-node__content {\n  color: #626aef;\n}\n.is-penultimate > .el-tree-node__children > div {\n  display: inline-block;\n  margin-right: 4px;\n\n  &:not(:first-child) .el-tree-node__content {\n    padding-left: 0px !important;\n  }\n  .el-tree-node__content {\n    padding-right: 16px;\n  }\n}\n</style>"],"names":["customNodeClass","isPenultimate","_node","visible","ref","treeRef","formRef","rules","form","treeData","GetUserRule","data","getUserRule","error","userGroupData","GetUserGroup","getUserGroup","GetUserGroupDetail","id","getUserGroupDetail","treeProps","emit","__emit","open","merged","detail","handleSubmit","checkedKeys","_a","payload","addAdminGroup","editAdminGroup","ElMessage","__expose","_createBlock","_component_el_dialog","$event","_createVNode","_component_el_form","_component_el_form_item","_component_el_tree_select","_cache","_component_el_input","_component_el_switch","_component_el_input_number","_createElementVNode","_hoisted_1","_component_el_tree","_component_el_button"],"mappings":"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"}