{"version":3,"file":"config-Dd0Nxogu.js","sources":["../../src/api/system.ts","../../src/pages/system/config.vue"],"sourcesContent":["import request from '../utils/request'\n\n// 获取系统配置列表\nexport const getSystemConfigList = () => {\n  return request({\n    url: '/api/v1/admin/system/config/list',\n    method: 'get'\n  })\n}\n\n// 保存系统配置\nexport const saveSystemConfig = (data: any) => {\n  return request({\n    url: '/api/v1/admin/system/config/save',\n    method: 'post',\n    data\n  })\n}\n\n// 获取配置分组\nexport const getConfigGroups = () => {\n  return request({\n    url: '/api/v1/admin/system/config/groups',\n    method: 'get'\n  })\n}\n\n// 重置配置\nexport const resetConfig = (data: any) => {\n  return request({\n    url: '/api/v1/admin/system/config/reset',\n    method: 'post',\n    data\n  })\n}\n\n","<template>\n  <div class=\"system-config-page\">\n    <div class=\"page-header\">\n      <h1>系统配置</h1>\n      <p>管理系统各项配置参数</p>\n    </div>\n\n    <!-- 操作按钮 -->\n    <div class=\"action-bar\">\n      <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"saving\">\n        <el-icon><Check /></el-icon>\n        保存配置\n      </el-button>\n      <el-button @click=\"handleRefresh\" :loading=\"loading\">\n        <el-icon><Refresh /></el-icon>\n        刷新\n      </el-button>\n      <el-button type=\"warning\" @click=\"handleResetAll\">\n        <el-icon><RefreshLeft /></el-icon>\n        重置所有配置\n      </el-button>\n    </div>\n\n    <!-- 遍历分组 -->\n    <el-card v-for=\"(group, groupKey) in groupedConfig\" :key=\"groupKey\" class=\"config-group-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span class=\"group-title\">{{ groupKeyLabels[groupKey] || groupKey }}</span>\n          <div class=\"group-actions\">\n            <el-button size=\"small\" @click=\"resetGroup(groupKey)\">\n              <el-icon><RefreshLeft /></el-icon>\n              重置此组\n            </el-button>\n          </div>\n        </div>\n      </template>\n\n      <el-form :model=\"group\" label-width=\"180px\" class=\"config-form\">\n        <el-form-item\n            v-for=\"item in group\"\n            :key=\"item.config_key\"\n            :label=\"item.description || item.config_key\"\n            :help=\"item.help_text\"\n        >\n          <div class=\"config-item\">\n            <component\n                :is=\"getInputComponent(item.config_type)\"\n                v-model=\"item.config_value\"\n                v-bind=\"getInputProps(item)\"\n                class=\"config-input\"\n            />\n            <div class=\"config-meta\" v-if=\"item.default_value\">\n              <span class=\"default-value\">默认值: {{ item.default_value }}</span>\n            </div>\n          </div>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 保存状态提示 -->\n    <el-alert\n        v-if=\"saveStatus\"\n        :title=\"saveStatus.message\"\n        :type=\"saveStatus.type\"\n        :closable=\"false\"\n        class=\"save-alert\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { Check, Refresh, RefreshLeft } from '@element-plus/icons-vue'\nimport { \n  getSystemConfigList, \n  saveSystemConfig, \n  resetConfig \n} from '@/api/system'\n\n// 分组显示标签，可按需求自定义\nconst groupKeyLabels: Record<string, string> = {\n  device_config: '设备配置',\n  auth_config: '后台登录认证配置',\n  payment_config: '支付配置',\n  notification_config: '通知配置',\n  system_config: '系统配置'\n}\n\ninterface ConfigItem {\n  id: number\n  config_key: string\n  config_value: any\n  config_type: 'string' | 'int' | 'bool' | 'json'\n  description: string\n  group_key: string\n  default_value?: string\n  help_text?: string\n}\n\nconst configItems = ref<ConfigItem[]>([])\nconst groupedConfig = reactive<Record<string, ConfigItem[]>>({})\nconst loading = ref(false)\nconst saving = ref(false)\nconst saveStatus = ref<{message: string, type: string} | null>(null)\n\n// 获取 input 组件类型\nconst getInputComponent = (type: string) => {\n  switch (type) {\n    case 'bool':\n      return 'el-switch'\n    case 'json':\n    case 'string':\n      return 'el-input'\n    case 'int':\n      return 'el-input-number'\n    default:\n      return 'el-input'\n  }\n}\n\n// 获取 input props\nconst getInputProps = (item: ConfigItem) => {\n  if (item.config_type === 'json') {\n    return { \n      type: 'textarea', \n      rows: 3, \n      placeholder: 'JSON 格式',\n      style: 'font-family: monospace;'\n    }\n  }\n  if (item.config_type === 'int') {\n    return { \n      min: 0,\n      precision: 0\n    }\n  }\n  if (item.config_type === 'string') {\n    return {\n      placeholder: '请输入配置值'\n    }\n  }\n  return {}\n}\n\n// 加载配置数据\nconst loadConfigs = async () => {\n  loading.value = true\n  try {\n    const response = await getSystemConfigList()\n    if (response.code === 200) {\n      configItems.value = response.data || []\n      \n      // 清空分组数据\n      Object.keys(groupedConfig).forEach(key => {\n        delete groupedConfig[key]\n      })\n      \n      // 按 group_key 分组\n      configItems.value.forEach(item => {\n        if (!groupedConfig[item.group_key]) {\n          groupedConfig[item.group_key] = []\n        }\n        groupedConfig[item.group_key].push(item)\n      })\n      \n      saveStatus.value = null\n    } else {\n      ElMessage.error('获取配置失败: ' + response.message)\n    }\n  } catch (error) {\n    ElMessage.error('获取配置失败')\n    console.error('获取配置失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 保存配置\nconst handleSubmit = async () => {\n  saving.value = true\n  try {\n    const payload = {\n      configs: configItems.value.map(item => ({\n        id: item.id,\n        config_value: item.config_value\n      }))\n    }\n    \n    const response = await saveSystemConfig(payload)\n    if (response.code === 200) {\n      ElMessage.success(response.message || '配置保存成功')\n      saveStatus.value = {\n        message: response.message || '配置保存成功',\n        type: 'success'\n      }\n    } else {\n      ElMessage.error('保存失败: ' + response.message)\n      saveStatus.value = {\n        message: '保存失败: ' + response.message,\n        type: 'error'\n      }\n    }\n  } catch (error) {\n    ElMessage.error('保存失败')\n    saveStatus.value = {\n      message: '保存失败',\n      type: 'error'\n    }\n    console.error('保存配置失败:', error)\n  } finally {\n    saving.value = false\n  }\n}\n\n// 刷新配置\nconst handleRefresh = () => {\n  loadConfigs()\n}\n\n// 重置单个分组\nconst resetGroup = async (groupKey: string) => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要重置 \"${groupKeyLabels[groupKey] || groupKey}\" 分组的所有配置吗？`,\n      '确认重置',\n      {\n        type: 'warning'\n      }\n    )\n    \n    const response = await resetConfig({ group_key: groupKey })\n    if (response.code === 200) {\n      ElMessage.success(response.message || '分组重置成功')\n      loadConfigs() // 重新加载配置\n    } else {\n      ElMessage.error('重置失败: ' + response.message)\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('重置失败')\n      console.error('重置配置失败:', error)\n    }\n  }\n}\n\n// 重置所有配置\nconst handleResetAll = async () => {\n  try {\n    await ElMessageBox.confirm(\n      '确定要重置所有配置到默认值吗？此操作不可撤销！',\n      '确认重置所有配置',\n      {\n        type: 'warning',\n        confirmButtonText: '确定重置',\n        cancelButtonText: '取消'\n      }\n    )\n    \n    // 重置所有分组\n    const groupKeys = Object.keys(groupedConfig)\n    let successCount = 0\n    \n    for (const groupKey of groupKeys) {\n      try {\n        const response = await resetConfig({ group_key: groupKey })\n        if (response.code === 200) {\n          successCount++\n        }\n      } catch (error) {\n        console.error(`重置分组 ${groupKey} 失败:`, error)\n      }\n    }\n    \n    if (successCount > 0) {\n      ElMessage.success(`成功重置 ${successCount} 个分组`)\n      loadConfigs() // 重新加载配置\n    } else {\n      ElMessage.error('重置失败')\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('重置失败')\n      console.error('重置所有配置失败:', error)\n    }\n  }\n}\n\n// 组件挂载时加载配置\nonMounted(() => {\n  loadConfigs()\n})\n</script>\n\n<style scoped>\n.system-config-page {\n  padding: 20px;\n}\n\n.page-header {\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.page-header h1 {\n  margin: 0 0 10px 0;\n  color: #303133;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.page-header p {\n  margin: 0;\n  color: #909399;\n  font-size: 14px;\n}\n\n.action-bar {\n  margin-bottom: 20px;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n}\n\n.config-group-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.group-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.group-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.config-form {\n  padding: 20px 0;\n}\n\n.config-item {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.config-input {\n  width: 100%;\n}\n\n.config-meta {\n  font-size: 12px;\n  color: #909399;\n}\n\n.default-value {\n  background: #f5f7fa;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.save-alert {\n  margin-top: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .action-bar {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .card-header {\n    flex-direction: column;\n    gap: 10px;\n    align-items: flex-start;\n  }\n  \n  .group-actions {\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n\n/* 表单样式优化 */\n:deep(.el-form-item__label) {\n  font-weight: 500;\n  color: #606266;\n}\n\n:deep(.el-form-item__help) {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 4px;\n}\n\n:deep(.el-input__inner) {\n  border-radius: 4px;\n}\n\n:deep(.el-textarea__inner) {\n  border-radius: 4px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n}\n\n:deep(.el-switch) {\n  --el-switch-on-color: #409eff;\n}\n\n/* 按钮样式 */\n.action-bar .el-button {\n  border-radius: 6px;\n  font-weight: 500;\n}\n\n.group-actions .el-button {\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n/* 卡片样式 */\n.config-group-card {\n  transition: all 0.3s ease;\n}\n\n.config-group-card:hover {\n  box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.15);\n}\n\n/* 加载状态 */\n.el-button.is-loading {\n  pointer-events: none;\n}\n\n/* 成功/错误状态 */\n.save-alert.el-alert--success {\n  background-color: #f0f9ff;\n  border-color: #67c23a;\n}\n\n.save-alert.el-alert--error {\n  background-color: #fef0f0;\n  border-color: #f56c6c;\n}\n</style>\n"],"names":["getSystemConfigList","request","saveSystemConfig","data","resetConfig","groupKeyLabels","configItems","ref","groupedConfig","reactive","loading","saving","saveStatus","getInputComponent","type","getInputProps","item","loadConfigs","response","key","ElMessage","error","handleSubmit","payload","handleRefresh","resetGroup","groupKey","ElMessageBox","handleResetAll","groupKeys","successCount","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","_component_el_icon","_unref","Check","Refresh","RefreshLeft","_Fragment","_renderList","group","_createBlock","_component_el_card","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","$event","_component_el_form","_component_el_form_item","_hoisted_6","_resolveDynamicComponent","_mergeProps","_hoisted_7","_hoisted_8","_component_el_alert"],"mappings":"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"}