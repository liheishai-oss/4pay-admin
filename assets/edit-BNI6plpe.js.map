{"version":3,"file":"edit-BNI6plpe.js","sources":["../../src/api/paymentChannel.ts","../../src/pages/channel/edit.vue"],"sourcesContent":["// src/api/paymentChannel.ts\nimport request from '../utils/request'\n\n// 获取收款通道列表\nexport function getPaymentChannels(api: string, page: number, pageSize: number, search: Record<string, any> = {}) {\n    return request({\n        url: api,\n        method: 'get',\n        params: {\n            page,\n            page_size: pageSize,\n            search: JSON.stringify(search)\n        }\n    });\n}\n\n// 获取收款通道详情\nexport function getPaymentChannelDetail(api: string, id: number) {\n    return request({\n        url: `${api}/${id}`,\n        method: 'get'\n    });\n}\n\n// 新增收款通道\nexport function addPaymentChannel(api: string, data: Record<string, any> = {}) {\n    return request({\n        url: `${api}`,\n        method: 'post',\n        data\n    });\n}\n\n// 编辑收款通道\nexport function editPaymentChannel(api: string, data: Record<string, any> = {}) {\n    return request({\n        url: `${api}`,\n        method: 'post',\n        data\n    });\n}\n\n// 删除收款通道\nexport function deletePaymentChannel(api: string, ids: number | number[]) {\n    return request({\n        url: `${api}/delete`,\n        method: 'post',\n        data: { ids: Array.isArray(ids) ? ids : [ids] }\n    });\n}\n\n// 状态开关\nexport function togglePaymentChannelStatus(api: string, id: number) {\n    return request({\n        url: `${api}/status-switch`,\n        method: 'post',\n        data: { id }\n    });\n}\n","<script setup lang=\"ts\">\nimport { ref, watch, computed } from 'vue'\nimport { ElMessage, ElForm } from 'element-plus'\n\nimport {addPaymentChannel, editPaymentChannel, getPaymentChannelDetail} from \"@/api/paymentChannel.ts\";\nimport {getSuppliers} from \"@/api/supplier.ts\";\n\nconst visible = ref(false)\nconst formRef = ref<InstanceType<typeof ElForm>>()\nconst loading = ref(false)\n\nconst form = ref({\n  id: 0,\n  channel_name: \"\",\n  supplier_id: undefined as number | undefined,\n  product_code: \"\",\n  status: 1,\n  weight: 0,\n  min_amount: 1, // 默认1元\n  max_amount: 0,\n  cost_rate: 0,\n  remark: \"\",\n  basic_params: [] as Array<{key: string, value: string}>,\n})\n\nconst allSuppliers = ref<{id: number, name: string}[]>([]) // 存储所有供应商数据\nconst supplierSearchKeyword = ref('')\n\n// 过滤后的供应商数据，支持本地搜索\nconst filteredSuppliers = computed(() => {\n  console.log('allSuppliers.value:', allSuppliers.value)\n  console.log('allSuppliers.value 类型:', typeof allSuppliers.value)\n  console.log('allSuppliers.value 是否为数组:', Array.isArray(allSuppliers.value))\n  \n  let suppliers = allSuppliers.value.filter(supplier => {\n    console.log('检查供应商:', supplier, '有id:', !!supplier?.id, '有name:', !!supplier?.name)\n    return supplier && typeof supplier === 'object' && supplier.id && supplier.name\n  })\n  console.log('过滤后的供应商:', suppliers)\n  \n  // 如果有搜索关键词，进行本地过滤\n  if (supplierSearchKeyword.value && supplierSearchKeyword.value.trim() !== '') {\n    const keyword = supplierSearchKeyword.value.trim().toLowerCase()\n    suppliers = suppliers.filter(supplier => \n      supplier.name.toLowerCase().includes(keyword)\n    )\n  }\n  \n  // 确保返回的是普通对象而不是Proxy\n  const plainSuppliers = suppliers.map(supplier => ({\n    id: supplier.id,\n    name: supplier.name\n  }))\n  \n  console.log('最终返回的供应商:', plainSuppliers)\n  return plainSuppliers\n})\nconst GetSuppliers = async () => {\n  try {\n    const res = await getSuppliers('/api/v1/admin/supplier/select/all', 1, 1000, { status: 1 })\n    console.log('供应商列表API响应:', res.data)\n    \n    // 根据实际数据结构判断\n    if (res.data && res.data.status && res.data.data && Array.isArray(res.data.data)) {\n      // 如果res.data包含status和data字段\n      const data = res.data.data\n      console.log('供应商数据:', data)\n      // 过滤掉 null 或 undefined 的元素，确保每个元素都有 id 和 name\n      const filteredData = (Array.isArray(data) ? data : []).filter(item => \n        item && typeof item === 'object' && item.id && item.name\n      )\n      allSuppliers.value = filteredData\n      console.log('过滤后的供应商选项:', allSuppliers.value)\n    } else if (res.data && Array.isArray(res.data)) {\n      // 如果res.data直接是供应商数组\n      const data = res.data\n      console.log('供应商数据:', data)\n      const filteredData = (Array.isArray(data) ? data : []).filter(item => \n        item && typeof item === 'object' && item.id && item.name\n      )\n      allSuppliers.value = filteredData\n      console.log('过滤后的供应商选项:', allSuppliers.value)\n    } else {\n      console.log('供应商列表获取失败，响应数据:', res.data)\n      ElMessage.error('获取供应商列表失败：数据格式不正确')\n      allSuppliers.value = []\n    }\n    \n    // 检查当前选中的供应商是否仍然存在\n    if (form.value.supplier_id && allSuppliers.value.length > 0) {\n      const currentSupplier = allSuppliers.value.find(s => s.id === form.value.supplier_id)\n      if (!currentSupplier) {\n        console.warn('当前选中的供应商已不存在，清空选择')\n        form.value.supplier_id = undefined\n        ElMessage.warning('当前选中的供应商已不存在，请重新选择')\n      }\n    }\n  } catch (error) {\n    console.error('获取供应商列表失败:', error)\n    ElMessage.error('获取供应商列表失败')\n    allSuppliers.value = []\n  }\n}\n\n// 本地搜索供应商\nconst searchSuppliers = (keyword: string) => {\n  supplierSearchKeyword.value = keyword\n}\n\n// 金额格式化：分转元\nconst formatAmount = (amount: number) => {\n  return (amount / 100).toFixed(2)\n}\n\n// 金额格式化：元转分\nconst parseAmount = (amount: string) => {\n  return Math.round(parseFloat(amount) * 100)\n}\n\n// 费率格式化：百分比显示\nconst formatRate = (rate: number) => {\n  return (rate / 100).toFixed(2)\n}\n\n// 费率格式化：百分比转存储格式\nconst parseRate = (rate: string) => {\n  return Math.round(parseFloat(rate) * 100)\n}\n\n// 基础参数处理\nconst addBasicParam = () => {\n  form.value.basic_params.push({ key: '', value: '' })\n}\n\nconst removeBasicParam = (index: number) => {\n  form.value.basic_params.splice(index, 1)\n}\n\n// 将基础参数数组转换为对象\nconst basicParamsToObject = (params: Array<{key: string, value: string}>) => {\n  const obj: {[key: string]: string} = {}\n  params.forEach(param => {\n    if (param.key && param.key.trim()) {\n      obj[param.key.trim()] = param.value || ''\n    }\n  })\n  // 如果没有有效的参数，返回 null\n  return Object.keys(obj).length > 0 ? obj : null\n}\n\n// 将基础参数对象转换为数组\nconst basicParamsToArray = (params: {[key: string]: string} | null | undefined) => {\n  if (!params || typeof params !== 'object') {\n    return []\n  }\n  return Object.entries(params).map(([key, value]) => ({ key, value }))\n}\nconst emit = defineEmits<{\n  (event: 'refresh'): void\n}>()\n\n// 定义规则\nconst rules = ref({\n  channel_name: [{ required: true, message: '请输入通道名称', trigger: 'blur' }],\n  supplier_id: [{ required: true, message: '请选择供应商', trigger: 'change' }],\n  product_code: [{ required: false, message: '请输入产品编码', trigger: 'blur' }],\n  weight: [\n    {\n      required: false, // 选填\n      message: '请输入权重',\n      trigger: 'blur',\n      validator: (_rule: any, value: any, callback: any) => {\n        if (value && (isNaN(Number(value)) || Number(value) < 0)) {\n          callback(new Error('请输入有效的权重值'))\n        } else {\n          callback()\n        }\n      }\n    }\n  ],\n  min_amount: [\n    {\n      required: true,\n      message: '请输入最小支付金额',\n      trigger: 'blur',\n      validator: (_rule: any, value: any, callback: any) => {\n        if (!value || isNaN(Number(value)) || Number(value) < 1) {\n          callback(new Error('最小支付金额不能少于1元'))\n        } else {\n          callback()\n        }\n      }\n    }\n  ],\n  max_amount: [\n    {\n      required: false, // 选填，0表示不限制\n      message: '请输入最大支付金额',\n      trigger: 'blur',\n      validator: (_rule: any, value: any, callback: any) => {\n        if (value && (isNaN(Number(value)) || Number(value) < 0)) {\n          callback(new Error('请输入有效的最大支付金额'))\n        } else if (value && Number(value) > 0 && Number(value) < form.value.min_amount) {\n          callback(new Error('最大支付金额不能小于最小支付金额'))\n        } else {\n          callback()\n        }\n      }\n    }\n  ],\n  cost_rate: [\n    {\n      required: false, // 选填\n      message: '请输入成本费率',\n      trigger: 'blur',\n      validator: (_rule: any, value: any, callback: any) => {\n        if (value && (isNaN(Number(value)) || Number(value) < 0)) {\n          callback(new Error('请输入有效的成本费率'))\n        } else {\n          callback()\n        }\n      }\n    }\n  ],\n})\n\nconst open = async (data: any = {}) => {\n  // 先重置表单\n  resetForm()\n  loading.value = true\n  \n  try {\n    // 确保 data 不为 null 或 undefined\n    const safeData = data || {}\n    let merged: any = { ...safeData }\n    \n    // 检查是否有有效的 id 且大于 0\n    if (safeData && safeData.id && typeof safeData.id === 'number' && safeData.id > 0) {\n      // 编辑模式：从详情获取数据\n      try {\n        const res = await getPaymentChannelDetail('/api/v1/admin/payment-channel/detail', safeData.id)\n        if (res.status && res.data) {\n          merged = { ...res.data }\n        } else {\n          ElMessage.error('获取通道详情失败')\n          return\n        }\n      } catch (error) {\n        ElMessage.error('获取通道详情失败')\n        return\n      }\n    }\n\n    // 处理金额字段：分转元显示（仅在编辑模式下）\n    if (safeData && safeData.id && typeof safeData.id === 'number' && safeData.id > 0) {\n      if (merged.min_amount) {\n        merged.min_amount = formatAmount(merged.min_amount)\n      }\n      if (merged.max_amount) {\n        merged.max_amount = formatAmount(merged.max_amount)\n      }\n      // 处理费率字段：转换为百分比显示\n      if (merged.cost_rate) {\n        merged.cost_rate = formatRate(merged.cost_rate)\n      }\n      // 处理基础参数字段：转换为数组格式\n      if (merged.basic_params) {\n        merged.basic_params = basicParamsToArray(merged.basic_params)\n      }\n    }\n\n    // 只更新有值的字段\n    Object.keys(merged).forEach(key => {\n      if (merged[key] !== undefined && merged[key] !== null && merged[key] !== '') {\n        (form.value as any)[key] = merged[key]\n      }\n    })\n    \n    // 如果是新增模式，确保表单有正确的默认值\n    if (!safeData || !safeData.id || safeData.id <= 0) {\n      form.value.id = 0\n      form.value.status = 1\n      form.value.weight = 0\n      form.value.min_amount = 1 // 默认1元\n      form.value.max_amount = 0\n      form.value.cost_rate = 0\n      form.value.basic_params = [] // 默认没有参数行，用户可以选择添加\n      form.value.supplier_id = undefined // 不设置默认值，让用户选择\n    }\n\n    // 获取供应商列表\n    await GetSuppliers()\n    visible.value = true\n  } catch (error) {\n    ElMessage.error('加载数据失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst handleSubmit = async () => {\n  try {\n    await formRef.value?.validate()\n\n    // 准备提交数据\n    const submitData: any = { ...form.value }\n    \n    // 处理金额字段：元转分\n    submitData.min_amount = parseAmount(submitData.min_amount.toString())\n    submitData.max_amount = parseAmount(submitData.max_amount.toString())\n    // 处理费率字段：百分比转存储格式\n    submitData.cost_rate = parseRate(submitData.cost_rate?.toString() || '0')\n    // 处理基础参数字段：数组转对象格式\n    submitData.basic_params = basicParamsToObject(submitData.basic_params)\n\n    loading.value = true\n    let res: any\n    if (form.value.id > 0) {\n      res = await editPaymentChannel('/api/v1/admin/payment-channel/edit', submitData)\n    } else {\n      res = await addPaymentChannel('/api/v1/admin/payment-channel/add', submitData)\n    }\n\n    if (res.status) {\n      ElMessage.success(res.message || '操作成功')\n      emit('refresh')\n      visible.value = false\n    } else {\n      ElMessage.error(res.message || '操作失败')\n    }\n  } catch (error) {\n    ElMessage.error('提交失败，请检查表单信息')\n  } finally {\n    loading.value = false\n  }\n}\n// 重置表单数据\nconst resetForm = () => {\n  form.value = {\n    id: 0,\n    channel_name: \"\",\n    supplier_id: undefined,\n    product_code: \"\",\n    status: 1,\n    weight: 0,\n    min_amount: 1, // 默认1元\n    max_amount: 0,\n    cost_rate: 0,\n    remark: \"\",\n    basic_params: [],\n  }\n}\n\n// 监听 visible 变化，关闭时重置表单\nwatch(visible, (newVal, oldVal) => {\n  // 只有在从 true 变为 false 时才重置表单\n  if (oldVal === true && newVal === false) {\n    resetForm()\n  }\n})\n\ndefineExpose({ open })\n</script>\n\n\n<template>\n  <el-drawer v-model=\"visible\" :title=\"form.id > 0 ? '编辑收款通道' : '新增收款通道'\" size=\"50%\">\n    <div v-loading=\"loading\" element-loading-text=\"加载中...\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"150px\">\n      <!-- 基本信息 -->\n      <el-divider content-position=\"left\">基本信息</el-divider>\n      <el-form-item label=\"通道名称\" prop=\"channel_name\">\n        <el-input v-model=\"form.channel_name\" placeholder=\"请输入通道名称\" />\n      </el-form-item>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"所属供应商\" prop=\"supplier_id\">\n            <el-select \n              v-model=\"form.supplier_id\" \n              placeholder=\"请选择供应商\" \n              style=\"width: 100%\"\n              filterable\n              :filter-method=\"searchSuppliers\"\n              clearable\n            >\n              <el-option\n                v-for=\"supplier in filteredSuppliers\"\n                :key=\"supplier.id\"\n                :value=\"supplier.id\"\n                :label=\"supplier.name\"\n                @click=\"console.log('选择供应商:', supplier)\"\n              >\n                <span>{{ supplier.name }}</span>\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"产品编码\" prop=\"product_code\">\n            <el-input v-model=\"form.product_code\" placeholder=\"请输入产品编码（选填）\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"状态\" prop=\"status\">\n            <el-switch v-model=\"form.status\" :active-value=\"1\" :inactive-value=\"0\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"权重\" prop=\"weight\">\n            <el-input-number v-model=\"form.weight\" :min=\"0\" :max=\"9999\" placeholder=\"权重越大优先级越高（选填）\" style=\"width: 100%\" />\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <el-form-item label=\"备注\">\n        <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入备注信息\" />\n      </el-form-item>\n\n      <!-- 金额限制 -->\n      <el-divider content-position=\"left\">金额限制</el-divider>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"最小支付金额\" prop=\"min_amount\">\n            <el-input v-model=\"form.min_amount\" placeholder=\"单位：元，最低1元\">\n              <template #append>元</template>\n            </el-input>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"最大支付金额\" prop=\"max_amount\">\n            <el-input v-model=\"form.max_amount\" placeholder=\"单位：元，0表示不限制（选填）\">\n              <template #append>元</template>\n            </el-input>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <!-- 费率配置 -->\n      <el-divider content-position=\"left\">费率配置</el-divider>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"成本费率\" prop=\"cost_rate\">\n            <el-input v-model=\"form.cost_rate\" placeholder=\"例如：1.5表示1.5%（选填）\">\n              <template #append>%</template>\n            </el-input>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <!-- 基础参数配置 -->\n      <el-divider content-position=\"left\">基础参数配置（选填）</el-divider>\n      <el-form-item label=\"基础参数\">\n        <div class=\"basic-params-container\">\n          <div v-if=\"form.basic_params.length === 0\" class=\"no-params-tip\">\n            <span style=\"color: #999; font-size: 14px;\">暂无基础参数，点击下方按钮添加</span>\n          </div>\n          <div \n            v-for=\"(param, index) in form.basic_params\" \n            :key=\"index\" \n            class=\"param-row\"\n          >\n            <el-input \n              v-model=\"param.key\" \n              placeholder=\"参数名\" \n              style=\"width: 200px; margin-right: 10px;\"\n            />\n            <el-input \n              v-model=\"param.value\" \n              placeholder=\"参数值\" \n              style=\"width: 200px; margin-right: 10px;\"\n            />\n            <el-button \n              type=\"danger\" \n              size=\"small\" \n              @click=\"removeBasicParam(index)\"\n            >\n              删除\n            </el-button>\n          </div>\n          <el-button \n            type=\"primary\" \n            size=\"small\" \n            @click=\"addBasicParam\"\n            style=\"margin-top: 10px;\"\n          >\n            添加参数\n          </el-button>\n        </div>\n      </el-form-item>\n\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"loading\">提交</el-button>\n        <el-button @click=\"visible = false\">取消</el-button>\n      </el-form-item>\n      </el-form>\n    </div>\n  </el-drawer>\n</template>\n\n<style scoped>\n.el-form-item {\n  margin-bottom: 20px;\n}\n\n:deep(.el-divider__text) {\n  font-weight: 600;\n  color: #409eff;\n}\n\n:deep(.el-form-item__label) {\n  font-weight: 500;\n}\n\n:deep(.el-input-number) {\n  width: 100%;\n}\n\n:deep(.el-select) {\n  width: 100%;\n}\n\n:deep(.el-textarea) {\n  width: 100%;\n}\n\n.basic-params-container {\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  padding: 15px;\n  background-color: #fafafa;\n}\n\n.param-row {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.param-row:last-child {\n  margin-bottom: 0;\n}\n\n.no-params-tip {\n  text-align: center;\n  padding: 20px;\n  border: 1px dashed #dcdfe6;\n  border-radius: 4px;\n  background-color: #f9f9f9;\n}\n</style>"],"names":["getPaymentChannelDetail","api","id","request","addPaymentChannel","data","editPaymentChannel","visible","ref","formRef","loading","form","allSuppliers","supplierSearchKeyword","filteredSuppliers","computed","suppliers","supplier","keyword","plainSuppliers","GetSuppliers","res","getSuppliers","filteredData","item","ElMessage","s","error","searchSuppliers","formatAmount","amount","parseAmount","formatRate","rate","parseRate","addBasicParam","removeBasicParam","index","basicParamsToObject","params","obj","param","basicParamsToArray","key","value","emit","__emit","rules","_rule","callback","open","resetForm","safeData","merged","handleSubmit","_a","submitData","_b","watch","newVal","oldVal","__expose","_createBlock","_component_el_drawer","$event","_withDirectives","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_unref","ElForm","_component_el_divider","_cache","_component_el_form_item","_component_el_input","_component_el_row","_component_el_col","_component_el_select","_Fragment","_renderList","_component_el_option","_createElementVNode","_toDisplayString","_component_el_switch","_component_el_input_number","_hoisted_2","_hoisted_3","_component_el_button"],"mappings":"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"}